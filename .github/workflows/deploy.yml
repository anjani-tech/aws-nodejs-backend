name: Deploy to EC2

on:
  push:
    branches:
      - main # Trigger deployment on push to the main branch v1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP_ADDRESS }} << 'EOF'
            
            # Navigate to the root directory
            cd / || { echo "Failed to navigate to root directory"; exit 1; }

            # If '/app' exists, delete it and start fresh
            if [ -d "/app" ]; then
              echo "'/app' directory exists, deleting it."
              sudo rm -rf /app
            fi

            # Create the '/app' directory and navigate into it
            sudo mkdir /app

            # Change the ownership of the '/app' directory to the 'ubuntu' user
            sudo chown ubuntu:ubuntu /app

            # Change the permissions to ensure write access (if needed)
            sudo chmod 755 /app

            # Verify the directory structure
            echo "Listing contents of root directory:"
            ls -la /

            # Verify '/app' directory creation
            echo "Listing contents of '/app' directory:"
            ls -la /app

            # Navigate to the '/app' directory
            cd /app || { echo "Failed to navigate to /app"; exit 1; }

            # Clone the repository into '/app' using the secret for the Git URL
            git clone ${{ secrets.GIT_REPO_URL }} . || { echo "Git clone failed"; exit 1; }

            # Verify the contents of the '/app' directory after cloning
            echo "Listing contents of '/app' after git clone:"
            ls -la /app

            # Ensure 'package.json' exists in the '/app' directory before running npm
            if [ ! -f "/app/package.json" ]; then
              echo "package.json file not found in '/app'. Exiting."
              exit 1
            fi

            # Install dependencies
            npm install || { echo "npm install failed"; exit 1; }

            # Start or restart the app using pm2
            pm2 restart server.js || pm2 start server.js

            # Optionally save the pm2 process list so it restarts on reboot
            pm2 save

          EOF
